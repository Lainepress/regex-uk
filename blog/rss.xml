<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"
    xmlns:dc="http://purl.org/dc/elements/1.1/">
    <channel>
        <title>the regex blog</title>
        <link>http://blog.regex.uk</link>
        <description><![CDATA[Writing Haskell and the regex package.]]></description>
        <atom:link href="http://blog.regex.uk/rss.xml" rel="self"
                   type="application/rss+xml" />
        <lastBuildDate>Tue, 18 Apr 2017 00:00:00 UT</lastBuildDate>
        <item>
    <title>Iterative Package Development</title>
    <link>http://blog.regex.uk/posts/2017-04-18-iterative-development.html</link>
    <description><![CDATA[<p>Here is the thing. Between the release of <a href="https://hackage.haskell.org/package/regex-1.0.0.0">regex-0.1.0.0</a> on 2017-02-18 and the release of regex-1.0.0 on 2017-04-15 we released 22 revisions of the package, excluding regex-0.1.0.0 itself, each of these revisions being driven by community input.</p>
<p>And I have no doubt that regex-1.0.0.0 has a somewhat better API than regex-0.1.0.0.</p>
<p>You could take the view (and I suspect that you do) that regex-0.1.0.0 was a shoddy release and that I should have taken longer to get the API right, and avoid the confusion and loss of confidence by making all of those releases, and there is a part of me that agrees with you.</p>
<p>But is this right? I mean I know that some people can get it right first time but I am clearly not one of those developers. When it comes to finding the right design for a modestly complicated API like regex it takes a while and a number of attempts.</p>
<p>(One small digression. Do I believe that regex should try to do less? No! I have reviewed the scope of the package many times and for sure I could have saved my self a lot of work by trying to do less, but I am convinced that it would be at the expense of the utility of the package. I might of course be still missing some tricks to making the API still better.)</p>
<p>So, is iterative development to be encouraged or discouraged for package developers? Should we announce that a package is WIP and go to the community for input and use an iterative development model to bring it in?</p>]]></description>
    <pubDate>Tue, 18 Apr 2017 00:00:00 UT</pubDate>
    <guid>http://blog.regex.uk/posts/2017-04-18-iterative-development.html</guid>
    <dc:creator>Chris Dornan</dc:creator>
</item>
<item>
    <title>regex-1.0.0.0 Released</title>
    <link>http://blog.regex.uk/posts/2017-04-17-announce-1.0.0.0.html</link>
    <description><![CDATA[<p>regex-1.0.0.0, the first stable version is up on Hackage.</p>
<ul>
<li><p>The final tweaks have been made to the API, evacuating <code>Text.RE</code> (whose sole purpose is now to provide a map of the API) and the <code>ZeInternals.*</code> module tree has been hidden with all of the internal functions and types needed by the regex-with-pcre and regex-examples packages collected into <code>Text.RE.ZeInternals</code>.</p></li>
<li><p>The first editions of the tutorials have been completed.</p></li>
</ul>
<p>The full details are in the <a href="https://hackage.haskell.org/package/regex-1.0.0.0/changelog">changelog</a>.</p>
<h2 id="acknowledgements">Acknowledgements</h2>
<p>The regex package has been greatly improved since regex-0.5.0.0 when we requested comment from the community and all of these improvements have been in response to contributions and feedback. We would like to especially thank the following for their contributions to shaping this release.</p>
<ul>
<li>Adam Bergmark</li>
<li>Alfredo Di Napoli</li>
<li>Artyom Kazak</li>
<li>Edward Z. Yang</li>
<li>Evan Laforge</li>
<li>Herbert Valerio Riedel</li>
<li>Michael Lamparski</li>
<li>Serge Le Huitouze</li>
<li>Simon Michael</li>
<li>Tom Knight</li>
</ul>]]></description>
    <pubDate>Mon, 17 Apr 2017 00:00:00 UT</pubDate>
    <guid>http://blog.regex.uk/posts/2017-04-17-announce-1.0.0.0.html</guid>
    <dc:creator>Chris Dornan</dc:creator>
</item>
<item>
    <title>regex-1.0.0.0 in preparation</title>
    <link>http://blog.regex.uk/posts/2017-04-10-update.html</link>
    <description><![CDATA[<p>regex-1.0.0.0 is nearly ready with the main tutorial completed and the specialist tutorials in their first drafts. We want to get this one right the release date for regex-1.0.0.0 has been put back from today (Monday) to Friday (2017-04-14).</p>
<p>We can see only <a href="https://github.com/iconnect/regex/milestone/3">very minor tweaks to the 0.14.0.0 API</a>.</p>]]></description>
    <pubDate>Mon, 10 Apr 2017 00:00:00 UT</pubDate>
    <guid>http://blog.regex.uk/posts/2017-04-10-update.html</guid>
    <dc:creator>Chris Dornan</dc:creator>
</item>
<item>
    <title>regex-0.14.0.0</title>
    <link>http://blog.regex.uk/posts/2017-04-05-update.html</link>
    <description><![CDATA[<p>A regex API with excessively complicated type classes — familiar?</p>
<p>With the fix of <a href="https://github.com/iconnect/regex/issues/115">#114</a> in 0.14.0.0 it just remains to rewrite the tutorials and finish the Haddocks for a <a href="https://github.com/iconnect/regex/milestone/3">1.0.0.0 release</a> on Monday.</p>]]></description>
    <pubDate>Wed, 05 Apr 2017 00:00:00 UT</pubDate>
    <guid>http://blog.regex.uk/posts/2017-04-05-update.html</guid>
    <dc:creator>Chris Dornan</dc:creator>
</item>
<item>
    <title>regex-0.11.0.0</title>
    <link>http://blog.regex.uk/posts/2017-03-29-update.html</link>
    <description><![CDATA[<p>0.11.0.0 is out with another (and final) round of API simplification.</p>
<ul>
<li>Simplify API (<a href="https://github.com/iconnect/regex/issues/97">#97</a>)</li>
<li>Rename Location to RELocation (<a href="https://github.com/iconnect/regex/issues/98">#98</a>)</li>
<li>Rename the MacrosDescriptor Fields (<a href="https://github.com/iconnect/regex/issues/99">#99</a>)</li>
</ul>
<p>The main change is the first, which aims to make life easier for the developer that loads up the <a href="http://hs.regex.uk">Hackage contents page</a> for the first time.</p>
<ul>
<li><p>The <code>Internal</code> folder has been renamed to <code>ZeInternals</code> to drop it down to the bottom of the Hackage contents page. the incoming developer should just this interior stuff as it is not part of the official API, and it is dropped to the bottom accordingly.</p></li>
<li><p><code>Text.RE.TDFA.RE</code> and <code>Text.RE.PCRE.RE</code> have been moved under <code>ZeInternals</code> as <code>TDFA</code> and <code>PCRE</code>, rspectively — an obvious move in retrospect! Now the <code>Text.RE.TDFA</code> and <code>Text.RE.PCRE</code> trees are just variants of the one module (Text.RE.TDFA.ByteString.Lazy), varied according the RE flavour and the type of the text you want to match. (Again, this was in response to feedback.)</p></li>
<li><p>The <code>Text.RE.Types.*</code> modules have been banished under <code>ZeInternals</code>.</p></li>
<li><p><code>Text.RE.IsRegex</code>, <code>Text.RE.ReOptions</code> and <code>Text.RE.Replace</code> have been established as the API modules for the <code>IsRegex</code> class, the RE options and the general replace API. Some of the <code>Replace</code> module does not belong io the API and is providing internal interfaces so <code>Text.RE.Replace</code> just re-exports from <code>Text.RE.ZEInternals.Replace</code>.</p></li>
</ul>
<p>Share and Enjoy!</p>]]></description>
    <pubDate>Wed, 29 Mar 2017 00:00:00 UT</pubDate>
    <guid>http://blog.regex.uk/posts/2017-03-29-update.html</guid>
    <dc:creator>Chris Dornan</dc:creator>
</item>
<item>
    <title>regex-0.10.0.3</title>
    <link>http://blog.regex.uk/posts/2017-03-28-update.html</link>
    <description><![CDATA[<p>The preparation for regex-1.0.0.0 is almost complete.</p>
<ul>
<li><p>The schedule of releasing on 2017-03-31 <a href="https://github.com/iconnect/regex/milestone/3">remains on track</a>.</p></li>
<li><p>The reorganization of the API is almost complete in <a href="https://hackage.haskell.org/package/regex-0.10.0.3">regex-0.10.0.3</a>, with (I hope) only relatively minor adjustments to make;</p></li>
<li><p>While I will continue to refine the Haddocks, most of the effort that I have available will be focused on reorganizing the tutorial in line with the new API.</p></li>
<li><p><em>All</em> of the latter effort has been driven by the feedback from you and all of the feedback has been acted on (just because it is so good) — please keep it up; I am sorry if you have not received an acknowledgment of some feedback yet — it is coming; it is just that it has just been a spectacularly busy time for me.</p></li>
</ul>
<p>Thanks — you are amazing!</p>]]></description>
    <pubDate>Tue, 28 Mar 2017 00:00:00 UT</pubDate>
    <guid>http://blog.regex.uk/posts/2017-03-28-update.html</guid>
    <dc:creator>Chris Dornan</dc:creator>
</item>
<item>
    <title>regex-0.8.0.0</title>
    <link>http://blog.regex.uk/posts/2017-03-16-update.html</link>
    <description><![CDATA[<p>Regex is going through a process of reorganisation in preparation for the release of 1.0.0.0, the first stable release. We have three things to do for the release which should be completed in the 0.9.0.0 release.</p>
<h2 id="better-organise-the-regex-api">Better organise the regex API</h2>
<p><code>regex</code> is being organised in a more structured manner with the most important types and functions being presented prominently in the API modules, the most important general types and functions in <code>Text.RE</code> and the specialist types and functions in the remaining modules, which are now organised into a hierarchy that makes it easier to see what is where. This reorganisation has been mostly completed with the release of 0.8.0.0.</p>
<h2 id="make-regex-compatible-w-th-less-ghcs">Make <code>regex</code> compatible w/ TH-less GHCs</h2>
<p>This covers two technical fixes which should be non-disruptive. See <a href="https://github.com/iconnect/regex/issues/70">#70</a> and <a href="https://github.com/iconnect/regex/pull/69">PR #69</a>.</p>
<h2 id="make-replacement-templates-type-safe">Make replacement templates type safe</h2>
<p>We would like to make the replacement templates type safe, which is to say that the references to captures in the replacement templates should be checked at compile time. This will involve some disruption to the Edits and Replace APIs. Some rationalisation of the <code>Replace</code> section of <code>Text.RE</code> also be considered. This issue is being tracked by <a href="https://github.com/iconnect/regex/issues/60">#60</a>.</p>
<h2 id="new-projected-release-date-for-regex-1.0.0.0">New projected release date for regex-1.0.0.0</h2>
<p>The date for releasing regex-1.0.0.0 has been pushed back to the end of March to allow these changes to settle and be reviewed.</p>]]></description>
    <pubDate>Thu, 16 Mar 2017 00:00:00 UT</pubDate>
    <guid>http://blog.regex.uk/posts/2017-03-16-update.html</guid>
    <dc:creator>Chris Dornan</dc:creator>
</item>
<item>
    <title>HaskellX Bytes Talk: Why Regular Expressions Matter</title>
    <link>http://blog.regex.uk/posts/2017-02-26-0-haskellx-bytes-why-res-matter.html</link>
    <description><![CDATA[<p class="subheading">
HaskellX Bytes Talk at <a href="https://skillsmatter.com/contact-us">CodeNode</a>, London, <strong>2017-05-08T1830+0100</strong> by Chris Dornan (<a href="https://skillsmatter.com/meetups/9160-why-regular-expressions-matter-with-chris-dornan">Skills Matter page</a>)
</p>
<p>In this talk I will look at how Regular Expressions have been supported in Haskell and how well they should be supported. (Spoiler alert: I don’t think they have been supported well enough.) Some technically excellent packages are available which have been widely adopted but there is strong evidence that they are not as easy to use as developers expect and a wide variety of alternative packages have been proposed, none of which have attracted enough support to supplant the original.</p>
<p>I will speculate on why this situation has come about and why I think the new ‘regex’ package will fix all of this. (Another spoiler alert: it is built on top of the technically excellent, de facto standard ‘regex-base’ packages that get used when Haskell folks really, really can’t avoid using regular expressions.)</p>]]></description>
    <pubDate>Sun, 26 Feb 2017 00:00:00 UT</pubDate>
    <guid>http://blog.regex.uk/posts/2017-02-26-0-haskellx-bytes-why-res-matter.html</guid>
    <dc:creator>Chris Dornan</dc:creator>
</item>

    </channel>
</rss>
